{"ast":null,"code":"var _jsxFileName = \"/home/tesfayh/Documents/personalproject/react-task-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from './Componnent/Header';\nimport Tasks from './Componnent/Tasks';\nimport AddTask from './Componnent/AddTask';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Doctor Appointment\",\n    day: \"Feb 5 at 2:30pm\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Meeting at school\",\n    day: \"Feb 5 at 2:30pm\",\n    reminder: true\n  }, {\n    id: 3,\n    text: \"Food Shopping\",\n    day: \"Feb 5 at 2:30pm\",\n    reminder: false\n  }]);\n  //Add Taskd\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n    console.log(task);\n  };\n  // Delete tasks\n  const deleteTask = id => {\n    setTasks(tasks.filter(tasks => tasks.id !== id));\n  };\n  // Toggle reminder\n  const toggleReminder = id => {\n    //  console.log(\"Toggle reminder\")\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this) : \"No Tasks To Show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XbnaSNbOwXNNJ1eujVwkWfilIdI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Tasks","AddTask","useState","jsxDEV","_jsxDEV","App","_s","showAddTask","setShowAddTask","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","newTask","console","log","deleteTask","filter","toggleReminder","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","length","onDelete","onToggle","_c","$RefreshReg$"],"sources":["/home/tesfayh/Documents/personalproject/react-task-tracker/src/App.js"],"sourcesContent":["import Header from './Componnent/Header'\nimport Tasks from './Componnent/Tasks'\nimport AddTask from './Componnent/AddTask'\nimport {useState} from 'react'\nconst App =() => {\n  const [showAddTask,setShowAddTask] = useState(false)\n  const [tasks, setTasks]=useState(\n    [\n      {\n          id: 1,\n          text:\"Doctor Appointment\",\n          day: \"Feb 5 at 2:30pm\",\n          reminder: true,\n      },\n      {\n        id: 2,\n        text:\"Meeting at school\",\n        day: \"Feb 5 at 2:30pm\",\n        reminder: true,\n    },\n    {\n      id: 3,\n      text:\"Food Shopping\",\n      day: \"Feb 5 at 2:30pm\",\n      reminder: false,\n  }\n      \n  ]\n  )\n  //Add Taskd\nconst addTask =(task) => {\n    const id=Math.floor(Math.random() *10000) +1\n    const newTask={id, ...task}\n    setTasks([...tasks,newTask])\n    console.log(task)\n  }\n  // Delete tasks\nconst deleteTask=(id) => {\n  setTasks(tasks.filter((tasks)=>tasks.id!==id));\n}\n// Toggle reminder\nconst toggleReminder=(id) => {\n//  console.log(\"Toggle reminder\")\n  setTasks(\n    tasks.map((task)=>\n    task.id===id?{...task,reminder:\n       !task.reminder} : task\n       )\n    )\n}\n  return (\n    <div className=\"App\">\n    <Header/>\n    <AddTask onAdd={addTask}/>\n    { tasks.length>0? (\n    <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n    ):(\"No Tasks To Show\")\n    }\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAAQC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9B,MAAMC,GAAG,GAAEA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACpD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAACR,QAAQ,CAC9B,CACE;IACIS,EAAE,EAAE,CAAC;IACLC,IAAI,EAAC,oBAAoB;IACzBC,GAAG,EAAE,iBAAiB;IACtBC,QAAQ,EAAE;EACd,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAC,mBAAmB;IACxBC,GAAG,EAAE,iBAAiB;IACtBC,QAAQ,EAAE;EACd,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAC,eAAe;IACpBC,GAAG,EAAE,iBAAiB;IACtBC,QAAQ,EAAE;EACd,CAAC,CAGD,CAAC;EACD;EACF,MAAMC,OAAO,GAAGC,IAAI,IAAK;IACrB,MAAML,EAAE,GAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAE,KAAK,CAAC,GAAE,CAAC;IAC5C,MAAMC,OAAO,GAAC;MAACT,EAAE;MAAE,GAAGK;IAAI,CAAC;IAC3BN,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAACW,OAAO,CAAC,CAAC;IAC5BC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACnB,CAAC;EACD;EACF,MAAMO,UAAU,GAAEZ,EAAE,IAAK;IACvBD,QAAQ,CAACD,KAAK,CAACe,MAAM,CAAEf,KAAK,IAAGA,KAAK,CAACE,EAAE,KAAGA,EAAE,CAAC,CAAC;EAChD,CAAC;EACD;EACA,MAAMc,cAAc,GAAEd,EAAE,IAAK;IAC7B;IACED,QAAQ,CACND,KAAK,CAACiB,GAAG,CAAEV,IAAI,IACfA,IAAI,CAACL,EAAE,KAAGA,EAAE,GAAC;MAAC,GAAGK,IAAI;MAACF,QAAQ,EAC3B,CAACE,IAAI,CAACF;IAAQ,CAAC,GAAGE,IAClB,CACH,CAAC;EACL,CAAC;EACC,oBACEZ,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBxB,OAAA,CAACL,MAAM;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACT5B,OAAA,CAACH,OAAO;MAACgC,KAAK,EAAElB;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACxBvB,KAAK,CAACyB,MAAM,GAAC,CAAC,gBAChB9B,OAAA,CAACJ,KAAK;MAACS,KAAK,EAAEA,KAAM;MAAC0B,QAAQ,EAAEZ,UAAW;MAACa,QAAQ,EAAEX;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GACnE,kBAAmB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjB,CAAC;AAEV,CAAC;AAAA1B,EAAA,CAxDKD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAyDT,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}